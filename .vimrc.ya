" don't replace tabs and spaces with special charactres
set listchars=tab:»·,trail:·,precedes:<,extends:>

" Highlight current line
set cursorline

""" folding """
set nofoldenable
set foldmethod=indent

" highlight too long lines
autocmd BufRead * set colorcolumn=80
hi ColorColumn ctermbg=8

" Switch off .swp and ~ (backup) files
set nobackup
set noswapfile

" My abbrs
abbr loginfo logging.info('%s' % ())
abbr logdebug logging.debug('%s' % ())
abbr logerror logging.error('%s' % ())

" When editing a file, always jump to the last cursor position
augroup lastCurPos
    autocmd!
    autocmd BufReadPost *
    \ if line("'\"") > 0 && line ("'\"") <= line("$") |
    \   exe "normal! g'\"" |
    \ endif
augroup END

" auto shebang
augroup Shebang
    autocmd BufNewFile *.py 0put =\"#!/usr/bin/env python\<nl># -*- coding: utf-8 -*-\<nl>\"|$
augroup END


"""""""""""""""
""" Mappings"""
"""""""""""""""

" buffers navigation
map gB :bprevious<CR>
map gb :bnext<CR>


"""""""""""""""
""" Plugins """
"""""""""""""""

""" airline """
let g:ya_vim#use_plugin#airline = "yes"
let g:ya_vim#use_plugin#airline#settings = "yes"
let g:airline#extensions#tabline#buffer_nr_show = 1

""" ctrlp """
let g:ya_vim#use_plugin#ctrlp = "yes"
let g:ya_vim#use_plugin#ctrlp#settings = "yes"
let g:ctrlp_root_markers = ['.arcadia.root', '.ycm_extra_conf.py', '.ctrlp-marker']

""" delimitMate """
let g:ya_vim#use_plugin#delimitMate = "yes"
let g:ya_vim#use_plugin#delimitMate#settings = "yes"

""" easymotion """
let g:ya_vim#use_plugin#easymotion = "yes"
let g:ya_vim#use_plugin#easymotion#settings = "yes"

""" fswitch """
let g:ya_vim#use_plugin#fswitch = "yes"
let g:ya_vim#use_plugin#fswitch#settings = "yes"

""" incsearch_vim """
let g:ya_vim#use_plugin#incsearch_easymotion_vim = "yes"
let g:ya_vim#use_plugin#incsearch_easymotion_vim#settings = "yes"
let g:ya_vim#use_plugin#incsearch_vim = "yes"
let g:ya_vim#use_plugin#incsearch_vim#settings = "yes"
let g:ya_vim#use_plugin#incsearch_fuzzy_vim = "yes"
let g:ya_vim#use_plugin#incsearch_fuzzy_vim#settings = "yes"

""" indentLine """
let g:ya_vim#use_plugin#indentLine = "yes"
let g:ya_vim#use_plugin#indentLine#settings = "yes"

""" NerdCommenter """
let g:ya_vim#use_plugin#nerdcommenter = "yes"
let g:ya_vim#use_plugin#nerdcommenter#settings = "yes"

""" NerdTree """
let NERDTreeIgnore=['\.pyc$']
let g:NERDTreeDirArrowExpandable = '►'
let g:NERDTreeDirArrowCollapsible = '▼'

""" plugin_viewdoc """
let g:ya_vim#use_plugin#plugin_viewdoc = "yes"
let g:ya_vim#use_plugin#plugin_viewdoc#settings = "yes"

""" pyclewn """
let g:ya_vim#use_plugin#pyclewn = "yes"
let g:ya_vim#use_plugin#pyclewn#settings = "yes"

""" pymode """
let g:ya_vim#use_plugin#python_mode = "yes"
let g:ya_vim#use_plugin#python_mode#settings = "yes"
" indents
let g:pymode_indent = 1
" rope
let g:pymode_rope = 1
" common
let g:pymode_trim_whitespaces = 1   " Trim unused white spaces on save
" code checking
" Don't check code on every save (if file has been modified)
"let g:pymode_lint_on_write = 0
let g:pymode_lint_sort = ['E', 'C', 'I']
" ignore some pep8 warnings
let g:pymode_lint_ignore="E116,W503"

""" signify """
let g:ya_vim#use_plugin#signify = "yes"
let g:ya_vim#use_plugin#signify#settings = "yes"

""" snippets """
let g:ya_vim#use_plugin#snippets = "yes"
let g:ya_vim#use_plugin#snippets#settings = "yes"

""" spacehi """
let g:ya_vim#use_plugin#spacehi = "yes"
let g:ya_vim#use_plugin#spacehi#settings = "yes"
autocmd BufNewFile,BufReadPost,FilterReadPost,FileReadPost,Syntax,InsertLeave * SpaceHi
autocmd InsertEnter * NoSpaceHi

""" startify """
let g:ya_vim#use_plugin#startify = "yes"
let g:ya_vim#use_plugin#startify#settings = "yes"

""" tagbar """
let g:ya_vim#use_plugin#tagbar = "yes"
let g:ya_vim#use_plugin#tagbar#settings = "yes"
" close tagbar folds by default
"let g:tagbar_foldlevel = 0
let g:tagbar_width=35
" tagbar shows tags in order of they created in file
let g:tagbar_sort = 0

""" ultisnips """
let g:ya_vim#use_plugin#ultisnips = "yes"
let g:ya_vim#use_plugin#ultisnips#settings = "yes"

""" vcscommand """
let g:ya_vim#use_plugin#vcscommand = "yes"
let g:ya_vim#use_plugin#vcscommand#settings = "yes"
"
""" vim-surround """
let g:ya_vim#use_plugin#vim_surround = "yes"
let g:ya_vim#use_plugin#vim_surround#settings = "yes"
